[bdist_wheel]
universal = 1

[flake8]
max-line-length = 140
exclude = .tox,.eggs,ci/templates,build,dist

[tool:pytest]
# If a pytest section is found in one of the possible config files
# (pytest.ini, tox.ini or setup.cfg), then pytest will not look for any others,
# so if you add a pytest config section elsewhere,
# you will need to delete this section from setup.cfg.
norecursedirs =
    migrations

python_files =
    test_*.py
    *_test.py
    tests.py
addopts =
    -ra
    --strict
    --doctest-modules
    --doctest-glob=\*.rst
    --tb=short
    --verbose
    --durations=10
    --pyargs
# The order of these options matters. testpaths comes after addopts so that
# tox_sitepackages_example in testpaths is interpreted as
# --pyargs tox_sitepackages_example.
# Any tests in the src/ directory (that is, tests installed with the package)
# can be run by any user with pytest --pyargs tox_sitepackages_example.
# Packages that are sensitive to the host machine, most famously NumPy,
# include tests with the installed package so that any user can check
# at any time that everything is working properly.
# If you do choose to make installable tests, this will run the installed
# tests as they are actually installed (same principle as when we ensure that
# we always test the installed version of the package).
# If you have no need for this (and your src/ directory is very large),
# you can save a few milliseconds on testing by telling pytest not to search
# the src/ directory by removing
# --pyargs and tox_sitepackages_example from the options here.
testpaths =
    tox_sitepackages_example
    tests/

[tool:isort]
force_single_line = True
line_length = 120
known_first_party = tox_sitepackages_example
default_section = THIRDPARTY
forced_separate = test_tox_sitepackages_example
skip = .tox,.eggs,ci/templates,build,dist
